// Generator configuration for Prisma Client
generator client {
  provider = "prisma-client-js"
}

// Datasource configuration for SQLite database
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Model definition for Workflow
model Workflow {
  id          String  @id @default(cuid()) // Unique identifier with default value generated by cuid()
  userId      String // Identifier for the user who owns the workflow
  name        String
  description String?

  definition String
  status     String

  lastRunAt     DateTime?
  lastRunId     String?
  lastRunStatus String?
  nextRunAt     DateTime?

  createdAt  DateTime            @default(now())
  updatedAt  DateTime            @updatedAt
  executions WorkflowExecution[]

  @@unique([name, userId]) // Composite unique constraint on name and userId
}

model WorkflowExecution {
  id              String           @id @default(cuid())
  workflowId      String
  userId          String
  trigger         String
  status          String
  createdAt       DateTime         @default(now())
  startedAt       DateTime?
  completedAt     DateTime?
  definition      String           @default("{}")
  creditsConsumed Int              @default(0)
  workflow        Workflow         @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  phases          ExecutionPhase[]
}

model ExecutionPhase {
  id          String    @id @default(cuid())
  userId      String
  status      String
  number      Int
  node        String
  name        String
  startedAt   DateTime?
  completedAt DateTime?
  inputs      String?
  outputs     String?

  creditsConsumed Int?

  workflowExecutionId String
  execution           WorkflowExecution @relation(fields: [workflowExecutionId], references: [id], onDelete: Cascade)
}
